"""add sailing track point and line database table as well OWM tables

Revision ID: b5fdbb12f01a
Revises: c77126705deb
Create Date: 2023-05-25 12:10:47.484754

"""
import geoalchemy2
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b5fdbb12f01a'
down_revision = 'c77126705deb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('owm_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=True, comment='The datetime of the observation\t'),
    sa.Column('temp', sa.Float(), nullable=False, comment='The air temperature in Â°C'),
    sa.Column('humidity', sa.Float(), nullable=False, comment='Humidity, %'),
    sa.Column('wind_deg', sa.Float(), nullable=False, comment='Wind direction, degrees'),
    sa.Column('wind_speed', sa.Float(), nullable=False, comment='Wind speed in metre/sec'),
    sa.Column('pressure', sa.Float(), nullable=True, comment='Atmospheric pressure on the sea level, hPa'),
    sa.Column('latitude', sa.Float(), nullable=False, comment='The latitude of the model location'),
    sa.Column('longitude', sa.Float(), nullable=False, comment='The longitude of the model location'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sailing_track_line',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.String(), nullable=False, comment='ID created from Datetime track iso as uuid'),
    sa.Column('track_fid', sa.Integer(), nullable=False, comment='Track feature ID'),
    sa.Column('track_seg_id', sa.Integer(), nullable=False, comment='Track segment ID'),
    sa.Column('track_seg_point_id', sa.Integer(), nullable=False, comment='Track segment point ID'),
    sa.Column('ele', sa.Float(), nullable=False, comment='Elevation'),
    sa.Column('acceleration', sa.Float(), nullable=False, comment='Boat acceleration estimated from moving pandas'),
    sa.Column('angular_difference', sa.Float(), nullable=False, comment='Angular Difference from last segment estimated from moving pandas'),
    sa.Column('direction', sa.Float(), nullable=False, comment='Direction estimated from moving pandas'),
    sa.Column('distance', sa.Float(), nullable=False, comment='Travelled distance estimated from moving pandas'),
    sa.Column('speed', sa.Float(), nullable=False, comment='Boat speed estimated from moving pandas'),
    sa.Column('timedelta', sa.Float(), nullable=False, comment='The datetime of the observation'),
    sa.Column('t', sa.DateTime(), nullable=False, comment='The datetime of the observation'),
    sa.Column('prev_t', sa.DateTime(), nullable=False, comment='The datetime of the observation'),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='LINESTRING', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_sailing_track_line_geometry', 'sailing_track_line', ['geometry'], unique=False, postgresql_using='gist')
    op.create_table('sailing_track_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.String(), nullable=False, comment='ID created from Datetime track iso as uuid'),
    sa.Column('track_fid', sa.Integer(), nullable=False, comment='Track feature ID'),
    sa.Column('track_seg_id', sa.Integer(), nullable=False, comment='Track segment ID'),
    sa.Column('track_seg_point_id', sa.Integer(), nullable=False, comment='Track segment point ID'),
    sa.Column('ele', sa.Float(), nullable=False, comment='Elevation'),
    sa.Column('time', sa.DateTime(), nullable=False, comment='The datetime of the observation'),
    sa.Column('geometry', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_sailing_track_point_geometry', 'sailing_track_point', ['geometry'], unique=False, postgresql_using='gist')
    # op.drop_table('spatial_ref_sys')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('spatial_ref_sys',
    # sa.Column('srid', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('auth_name', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.Column('auth_srid', sa.INTEGER(), autoincrement=False, nullable=True),
    # sa.Column('srtext', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.Column('proj4text', sa.VARCHAR(length=2048), autoincrement=False, nullable=True),
    # sa.CheckConstraint('srid > 0 AND srid <= 998999', name='spatial_ref_sys_srid_check'),
    # sa.PrimaryKeyConstraint('srid', name='spatial_ref_sys_pkey')
    # )
    op.drop_index('idx_sailing_track_point_geometry', table_name='sailing_track_point', postgresql_using='gist')
    op.drop_table('sailing_track_point')
    op.drop_index('idx_sailing_track_line_geometry', table_name='sailing_track_line', postgresql_using='gist')
    op.drop_table('sailing_track_line')
    op.drop_table('owm_data')
    # ### end Alembic commands ###
